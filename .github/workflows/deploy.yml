name: Deploy Full Stack Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Backend Deployment
  deploy-backend:
    name: Deploy Backend to Render
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run TypeScript build
        working-directory: ./backend
        run: npm run build

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          echo "Deploying to Render..."
          # Render auto-deploys from GitHub, this is just for notification

  # Frontend Deployment
  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel Environment
        working-directory: ./frontend
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project
        working-directory: ./frontend
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        working-directory: ./frontend
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  # Notify on completion
  notify:
    name: Notify Deployment Status
    needs: [deploy-backend, deploy-frontend]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Deployment Complete
        run: |
          echo "Deployment completed!"
          echo "Backend: Deployed to Render"
          echo "Frontend: Deployed to Vercel"
